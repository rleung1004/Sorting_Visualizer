{"version":3,"sources":["components/Body/Body.jsx","components/Body/BodyContainer.js","components/Toolbar/Toolbar.jsx","reducers/array/index.js","reducers/algorithm/index.js","reducers/sorted/index.js","reducers/running/index.js","reducers/bubbleSort/index.js","reducers/swappers/index.js","SortingAlgorithms/bubbleSort.js","reducers/mergeSort/index.js","SortingAlgorithms/mergeSort.js","reducers/heapSort/index.js","SortingAlgorithms/heapSort.js","reducers/quickSort/index.js","SortingAlgorithms/quickSort.js","components/Toolbar/ToolbarContainer.js","components/SortingVisualizer/SortingVisualizer.jsx","App.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["Body","this","props","array","currentBubble","currentQuick","pivot","currentSwappers","currentHeap","currentSorted","currentMerge","numWidth","Math","floor","$","document","width","length","numMargin","margin","color","fontSize","id","map","number","index","backgroundColor","includes","className","key","style","height","marginLeft","marginRight","Component","connect","dispatch","Toolbar","handleClick","bind","handleChange","generateArray","getElementById","value","algorithm","updateAlgorithm","event","parseInt","target","sort","isRunning","speed","pow","cursor","onClick","type","min","max","background","disabled","onChange","setArray","createAction","handleActions","SET_ARRAY","state","payload","setAlgorithm","SET_ALGORITHM","setCurrentSorted","SET_CURRENT_SORTED","concat","setRunning","SET_RUNNING","setCurrentBubble","SET_CURRENT_BUBBLE","setCurrentSwappers","SET_CURRENT_SWAPPERS","bubbleSort","stateArray","slice","animations","sorted","i","j","push","temp","handleAnimations","num","setTimeout","dispatchFunction","shift","setCurrentMerge","SET_CURRENT_MERGE","mergeSort","finalArray","mergeSortHelper","startIdx","endIdx","obj","half","first","second","middleIdx","actualFirst","actualSecond","isFinalMerge","sortedArray","indexToPush","forEach","subArr","actualSort","idx","currentAnimation","setCurrentHeap","SET_CURRENT_HEAP","heapify","swap","left","right","heapSort","currentIdx","buildMaxHeap","setCurrentQuick","setPivot","SET_CURRENT_QUICK","SET_PIVOT","quickSort","quickSortHelper","Array","random","doSort","SortingVisualizer","App","combineReducers","createStore","rootReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6ee9127.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport \"./Body.css\";\r\n\r\nclass Body extends Component {\r\n  render() {\r\n    const {\r\n      array,\r\n      currentBubble,\r\n      currentQuick,\r\n      pivot,\r\n      currentSwappers,\r\n      currentHeap,\r\n      currentSorted,\r\n      currentMerge,\r\n    } = this.props;\r\n\r\n    const numWidth = Math.floor($(document).width() / (array.length * 3));\r\n    const width = `${numWidth}px`;\r\n\r\n    const numMargin =\r\n      array.length < 5\r\n        ? 10\r\n        : array.length < 8\r\n        ? 8\r\n        : array.length < 11\r\n        ? 6\r\n        : array.length < 20\r\n        ? 4\r\n        : array.length < 50\r\n        ? 3.5\r\n        : array.length < 100\r\n        ? 3\r\n        : array.length < 130\r\n        ? 2.5\r\n        : 2;\r\n    const margin = `${numMargin}px`;\r\n\r\n    const color = numWidth > 20 ? \"white\" : \"transparent\";\r\n\r\n    const numFont =\r\n      numWidth > 70\r\n        ? 20\r\n        : numWidth > 60\r\n        ? 18\r\n        : numWidth > 50\r\n        ? 16\r\n        : numWidth > 40\r\n        ? 14\r\n        : numWidth > 30\r\n        ? 12\r\n        : numWidth > 20\r\n        ? 10\r\n        : 8;\r\n    const fontSize = `${numFont}px`;\r\n\r\n    return (\r\n      <div id=\"body-container\">\r\n        {array.length\r\n          ? array.map((number, index) => {\r\n              const backgroundColor = currentSwappers.includes(index)\r\n                ? \"rgba(219, 57, 57, 0.8)\"\r\n                : currentBubble.includes(index) ||\r\n                  currentQuick.includes(index) ||\r\n                  currentHeap.includes(index) ||\r\n                  currentMerge.includes(index)\r\n                ? \"rgba(78, 216, 96, 0.8)\"\r\n                : pivot === index\r\n                ? \"rgba(237, 234, 59, 0.8)\"\r\n                : currentSorted.includes(index)\r\n                ? \"rgba(169, 92, 232, 0.8)\"\r\n                : \"rgba(66, 134, 244, 0.8)\";\r\n              return (\r\n                <div\r\n                  className=\"arrayElement\"\r\n                  key={index}\r\n                  style={{\r\n                    height: `${number * 3}px`,\r\n                    width: width,\r\n                    marginLeft: margin,\r\n                    marginRight: margin,\r\n                    backgroundColor: backgroundColor,\r\n                    color: color,\r\n                    fontSize: fontSize,\r\n                  }}\r\n                >\r\n                  {number}\r\n                </div>\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import { connect } from \"react-redux\";\r\nimport Body from \"./Body.jsx\";\r\n\r\nconst mapStateToProps = ({\r\n  array,\r\n  currentBubble,\r\n  currentHeap,\r\n  currentMerge,\r\n  currentQuick,\r\n  pivot,\r\n  currentSorted,\r\n  currentSwappers,\r\n}) => ({\r\n  array,\r\n  currentBubble,\r\n  currentHeap,\r\n  currentMerge,\r\n  currentQuick,\r\n  pivot,\r\n  currentSorted,\r\n  currentSwappers,\r\n});\r\n\r\nconst mapDispatchToProps = () => (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);\r\n","import React, { Component } from \"react\";\r\nimport \"./Toolbar.css\";\r\n\r\nclass Toolbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { generateArray } = this.props;\r\n\r\n    generateArray(87);\r\n    document.getElementById(\"change-size\").value = 50;\r\n  }\r\n\r\n  handleClick(algorithm) {\r\n    const { updateAlgorithm } = this.props;\r\n\r\n    updateAlgorithm(algorithm);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { generateArray } = this.props;\r\n\r\n    generateArray(Math.floor((parseInt(event.target.value) + 3) * 1.65));\r\n  }\r\n\r\n  render() {\r\n    const { array, algorithm, generateArray, sort, isRunning } = this.props;\r\n\r\n    const speed =\r\n      570 - Math.pow(array.length, 2) > 0 ? 570 - Math.pow(array.length, 2) : 0;\r\n\r\n    const color = isRunning ? \"rgba(214, 29, 29, 0.8)\" : \"white\";\r\n\r\n    const cursor = isRunning ? \"auto\" : \"pointer\";\r\n\r\n    return (\r\n      <div id=\"toolbar\">\r\n        <div\r\n          id={!isRunning ? \"generateArray\" : \"generateArrayX\"}\r\n          style={{ color: color, cursor: cursor }}\r\n          onClick={!isRunning ? () => generateArray(array.length) : null}\r\n        >\r\n          Generate New Array\r\n        </div>\r\n        <div className=\"separator\"></div>\r\n        <div id=\"arraySize\" style={{ color: color }}>\r\n          Change Array Size & Sorting Speed\r\n        </div>\r\n        <input\r\n          id=\"change-size\"\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          style={{ background: color, cursor: cursor }}\r\n          disabled={isRunning ? \"disabled\" : null}\r\n          onChange={this.handleChange}\r\n        />\r\n        <div className=\"separator\"></div>\r\n        <div\r\n          className={\r\n            algorithm === \"mergeSort\"\r\n              ? \"current-algorithm-button\"\r\n              : \"algorithm-button\"\r\n          }\r\n          onClick={() => {\r\n            this.handleClick(\"mergeSort\");\r\n          }}\r\n        >\r\n          Merge Sort\r\n        </div>\r\n        <div\r\n          className={\r\n            algorithm === \"quickSort\"\r\n              ? \"current-algorithm-button\"\r\n              : \"algorithm-button\"\r\n          }\r\n          onClick={() => {\r\n            this.handleClick(\"quickSort\");\r\n          }}\r\n        >\r\n          Quick Sort\r\n        </div>\r\n        <div\r\n          className={\r\n            algorithm === \"heapSort\"\r\n              ? \"current-algorithm-button\"\r\n              : \"algorithm-button\"\r\n          }\r\n          onClick={() => {\r\n            this.handleClick(\"heapSort\");\r\n          }}\r\n        >\r\n          Heap Sort\r\n        </div>\r\n        <div\r\n          className={\r\n            algorithm === \"bubbleSort\"\r\n              ? \"current-algorithm-button\"\r\n              : \"algorithm-button\"\r\n          }\r\n          onClick={() => {\r\n            this.handleClick(\"bubbleSort\");\r\n          }}\r\n        >\r\n          Bubble Sort\r\n        </div>\r\n        <div className=\"separator\"></div>\r\n        {algorithm ? (\r\n          <div\r\n            id=\"sort\"\r\n            style={{ color: color, cursor: cursor }}\r\n            onClick={!isRunning ? () => sort(algorithm, array, speed) : null}\r\n          >\r\n            Sort\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toolbar;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_ARRAY = \"SET_ARRAY\";\r\nexport const setArray = createAction(SET_ARRAY);\r\n\r\nexport const array = handleActions(\r\n  {\r\n    SET_ARRAY: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = \"\";\r\n\r\nexport const SET_ALGORITHM = \"SET_ALGORITHM\";\r\nexport const setAlgorithm = createAction(SET_ALGORITHM);\r\n\r\nexport const algorithm = handleActions(\r\n  {\r\n    SET_ALGORITHM: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_SORTED = \"SET_CURRENT_SORTED\";\r\nexport const setCurrentSorted = createAction(SET_CURRENT_SORTED);\r\n\r\nexport const currentSorted = handleActions(\r\n  {\r\n    SET_CURRENT_SORTED: (state, { payload }) => {\r\n      if (payload.length) {\r\n        return state.concat(payload);\r\n      } else {\r\n        return [];\r\n      }\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = false;\r\n\r\nexport const SET_RUNNING = \"SET_RUNNING\";\r\nexport const setRunning = createAction(SET_RUNNING);\r\n\r\nexport const isRunning = handleActions(\r\n  {\r\n    SET_RUNNING: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_BUBBLE = \"SET_CURRENT_BUBBLE\";\r\nexport const setCurrentBubble = createAction(SET_CURRENT_BUBBLE);\r\n\r\nexport const currentBubble = handleActions(\r\n  {\r\n    SET_CURRENT_BUBBLE: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_SWAPPERS = \"SET_CURRENT_SWAPPERS\";\r\nexport const setCurrentSwappers = createAction(SET_CURRENT_SWAPPERS);\r\n\r\nexport const currentSwappers = handleActions(\r\n  {\r\n    SET_CURRENT_SWAPPERS: (state, { payload }) => {\r\n      if (payload.length) {\r\n        return state.concat(payload);\r\n      } else {\r\n        return [];\r\n      }\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { setArray } from \"../reducers/array\";\r\nimport { setCurrentBubble } from \"../reducers/bubbleSort\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers\";\r\nimport { setCurrentSorted } from \"../reducers/sorted\";\r\nimport { setRunning } from \"../reducers/running\";\r\n\r\nfunction bubbleSort(stateArray, dispatch, speed) {\r\n  let array = stateArray.slice(0);\r\n  let animations = [];\r\n  let sorted = false;\r\n  let i = 0;\r\n  while (!sorted) {\r\n    sorted = true;\r\n    for (let j = 0; j < array.length - 1 - i; j++) {\r\n      animations.push([j, j + 1]);\r\n      if (array[j] > array[j + 1]) {\r\n        animations.push([j, j + 1, true]);\r\n        let temp = array[j];\r\n        array[j] = array[j + 1];\r\n        array[j + 1] = temp;\r\n        sorted = false;\r\n        animations.push(array.slice(0));\r\n        animations.push([]);\r\n      }\r\n    }\r\n    animations.push([true, array.length - 1 - i]);\r\n    i++;\r\n  }\r\n  handleAnimations(animations, dispatch, array, speed);\r\n  return array;\r\n}\r\n\r\nfunction handleAnimations(animations, dispatch, array, speed) {\r\n  if (!animations.length) {\r\n    dispatch(setCurrentBubble(array.map((num, index) => index)));\r\n    setTimeout(() => {\r\n      dispatch(setCurrentBubble([]));\r\n      dispatch(setCurrentSorted(array.map((num, index) => index)));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n  let dispatchFunction =\r\n    animations[0].length > 3\r\n      ? setArray\r\n      : animations[0].length === 3 || animations[0].length === 0\r\n      ? setCurrentSwappers\r\n      : animations[0].length === 2 && typeof animations[0][0] === \"boolean\"\r\n      ? setCurrentSorted\r\n      : setCurrentBubble;\r\n  dispatch(dispatchFunction(animations.shift()));\r\n  setTimeout(() => {\r\n    handleAnimations(animations, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n\r\nexport default bubbleSort;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_MERGE = \"SET_CURRENT_MERGE\";\r\nexport const setCurrentMerge = createAction(SET_CURRENT_MERGE);\r\n\r\nexport const currentMerge = handleActions(\r\n  {\r\n    SET_CURRENT_MERGE: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { setArray } from \"../reducers/array\";\r\nimport { setCurrentMerge } from \"../reducers/mergeSort\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers\";\r\nimport { setCurrentSorted } from \"../reducers/sorted\";\r\nimport { setRunning } from \"../reducers/running\";\r\n\r\nfunction mergeSort(stateArray, dispatch, speed) {\r\n  let array = stateArray.slice(0);\r\n  let animations = [];\r\n\r\n  let finalArray = mergeSortHelper(\r\n    array.map((num, idx) => [num, idx]),\r\n    animations,\r\n    0,\r\n    array.length - 1,\r\n    { array: array.slice(0) }\r\n  );\r\n\r\n  handleAnimations(animations, dispatch, finalArray, speed);\r\n  return finalArray;\r\n}\r\n\r\nfunction mergeSortHelper(array, animations, startIdx, endIdx, obj) {\r\n  if (array.length === 1) {\r\n    return array;\r\n  }\r\n  let half = Math.floor(array.length / 2);\r\n  let first = array.slice(0, half);\r\n  let second = array.slice(half);\r\n  let middleIdx = Math.floor((endIdx + 1 + startIdx) / 2);\r\n  let actualFirst = mergeSortHelper(\r\n    first,\r\n    animations,\r\n    startIdx,\r\n    middleIdx - 1,\r\n    obj\r\n  );\r\n  let actualSecond = mergeSortHelper(\r\n    second,\r\n    animations,\r\n    middleIdx,\r\n    endIdx,\r\n    obj\r\n  );\r\n  let isFinalMerge = false;\r\n\r\n  if (actualFirst.length + actualSecond.length === obj.array.length)\r\n    isFinalMerge = true;\r\n\r\n  return actualSort(\r\n    actualFirst,\r\n    actualSecond,\r\n    animations,\r\n    obj,\r\n    startIdx,\r\n    endIdx,\r\n    isFinalMerge\r\n  );\r\n}\r\n\r\nfunction actualSort(\r\n  first,\r\n  second,\r\n  animations,\r\n  obj,\r\n  startIdx,\r\n  endIdx,\r\n  isFinalMerge\r\n) {\r\n  let sortedArray = [];\r\n  let indexToPush = startIdx;\r\n\r\n  while (first.length && second.length) {\r\n    animations.push([first[0][1], second[0][1]]);\r\n\r\n    if (first[0][0] <= second[0][0]) {\r\n      indexToPush++;\r\n      sortedArray.push(first.shift());\r\n    } else {\r\n      animations.push([first[0][1], second[0][1], true]);\r\n      second[0][1] = indexToPush++;\r\n      sortedArray.push(second.shift());\r\n      first.forEach((subArr) => subArr[1]++);\r\n      if (startIdx === 0) {\r\n        obj.array = sortedArray\r\n          .map((subArr) => subArr[0])\r\n          .concat(first.map((subArr) => subArr[0]))\r\n          .concat(second.map((subArr) => subArr[0]))\r\n          .concat(obj.array.slice(endIdx + 1));\r\n      } else {\r\n        obj.array = obj.array\r\n          .slice(0, startIdx)\r\n          .concat(sortedArray.map((subArr) => subArr[0]))\r\n          .concat(first.map((subArr) => subArr[0]))\r\n          .concat(second.map((subArr) => subArr[0]))\r\n          .concat(obj.array.slice(endIdx + 1));\r\n      }\r\n      animations.push(obj.array.concat([indexToPush - 1, indexToPush]));\r\n      animations.push([]);\r\n    }\r\n    if (isFinalMerge) animations.push([true, indexToPush - 1]);\r\n  }\r\n  return sortedArray.concat(first).concat(second);\r\n}\r\n\r\nfunction handleAnimations(animations, dispatch, array, speed) {\r\n  if (!animations.length) {\r\n    dispatch(setCurrentMerge(array.map((num, index) => index)));\r\n    setTimeout(() => {\r\n      dispatch(setCurrentMerge([]));\r\n      dispatch(setCurrentSorted(array.map((num, index) => index)));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n\r\n  let dispatchFunction =\r\n    animations[0].length > 3\r\n      ? setArray\r\n      : (animations[0].length === 3 && typeof animations[0][2] === \"boolean\") ||\r\n        animations[0].length === 0\r\n      ? setCurrentSwappers\r\n      : animations[0].length === 2 && typeof animations[0][0] === \"boolean\"\r\n      ? setCurrentSorted\r\n      : setCurrentMerge;\r\n\r\n  if (dispatchFunction === setArray) {\r\n    let currentAnimation = animations.shift();\r\n    dispatch(\r\n      dispatchFunction(currentAnimation.slice(0, currentAnimation.length - 2))\r\n    );\r\n    dispatch(setCurrentSwappers([]));\r\n    dispatch(setCurrentMerge([]));\r\n    dispatch(\r\n      setCurrentSwappers([\r\n        currentAnimation[currentAnimation.length - 2],\r\n        currentAnimation[currentAnimation.length - 1],\r\n      ])\r\n    );\r\n    dispatch(\r\n      setCurrentMerge([\r\n        currentAnimation[currentAnimation.length - 2],\r\n        currentAnimation[currentAnimation.length - 1],\r\n      ])\r\n    );\r\n  } else {\r\n    dispatch(dispatchFunction(animations.shift()));\r\n  }\r\n\r\n  setTimeout(() => {\r\n    handleAnimations(animations, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n\r\nexport default mergeSort;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const SET_CURRENT_HEAP = \"SET_CURRENT_HEAP\";\r\nexport const setCurrentHeap = createAction(SET_CURRENT_HEAP);\r\n\r\nexport const currentHeap = handleActions(\r\n  {\r\n    SET_CURRENT_HEAP: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import { setArray } from \"../reducers/array\";\r\nimport { setCurrentHeap } from \"../reducers/heapSort\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers\";\r\nimport { setCurrentSorted } from \"../reducers/sorted\";\r\nimport { setRunning } from \"../reducers/running\";\r\n\r\nfunction heapSort(stateArray, dispatch, speed) {\r\n  let array = stateArray.slice(0);\r\n  let animations = [];\r\n  buildMaxHeap(array, animations);\r\n  let endIdx = array.length - 1;\r\n  while (endIdx > 0) {\r\n    let temp = array[endIdx];\r\n    array[endIdx] = array[0];\r\n    array[0] = temp;\r\n    animations.push([0, endIdx, true]);\r\n    animations.push(array.slice(0));\r\n    animations.push([]);\r\n    animations.push([true, endIdx]);\r\n    heapify(array, 0, endIdx, animations);\r\n    endIdx--;\r\n  }\r\n  animations.push([true, endIdx]);\r\n  handleAnimations(animations, dispatch, array, speed);\r\n  return array;\r\n}\r\n\r\nfunction buildMaxHeap(array, animations) {\r\n  let currentIdx = Math.floor(array.length / 2);\r\n  while (currentIdx >= 0) {\r\n    heapify(array, currentIdx, array.length, animations);\r\n    currentIdx--;\r\n  }\r\n}\r\n\r\nfunction heapify(array, startIdx, endIdx, animations) {\r\n  if (startIdx >= Math.floor(endIdx / 2)) {\r\n    return;\r\n  }\r\n\r\n  let left = startIdx * 2 + 1;\r\n  let right = startIdx * 2 + 2 < endIdx ? startIdx * 2 + 2 : null;\r\n  let swap;\r\n\r\n  if (right) {\r\n    animations.push([startIdx, left, right]);\r\n    swap = array[left] > array[right] ? left : right;\r\n  } else {\r\n    animations.push([startIdx, left]);\r\n    swap = left;\r\n  }\r\n\r\n  if (array[startIdx] < array[swap]) {\r\n    let temp = array[swap];\r\n    array[swap] = array[startIdx];\r\n    array[startIdx] = temp;\r\n    animations.push([startIdx, swap, true]);\r\n    animations.push(array.slice(0));\r\n    animations.push([]);\r\n    heapify(array, swap, endIdx, animations);\r\n  }\r\n}\r\n\r\nfunction handleAnimations(animations, dispatch, array, speed) {\r\n  if (!animations.length) {\r\n    dispatch(setCurrentHeap(array.map((num, idx) => idx)));\r\n    setTimeout(() => {\r\n      dispatch(setCurrentHeap([]));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n\r\n  let dispatchFunction =\r\n    animations[0].length > 3\r\n      ? setArray\r\n      : (animations[0].length === 3 && typeof animations[0][3] === \"boolean\") ||\r\n        !animations[0].length\r\n      ? setCurrentSwappers\r\n      : animations[0].length === 2 && typeof animations[0][0] === \"boolean\"\r\n      ? setCurrentSorted\r\n      : setCurrentHeap;\r\n\r\n  dispatch(dispatchFunction(animations.shift()));\r\n\r\n  setTimeout(() => {\r\n    handleAnimations(animations, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n\r\nexport default heapSort;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst initialStateOne = [];\r\nconst initialStateTwo = null;\r\n\r\nexport const SET_CURRENT_QUICK = \"SET_CURRENT_QUICK\";\r\nexport const setCurrentQuick = createAction(SET_CURRENT_QUICK);\r\nexport const SET_PIVOT = \"SET_PIVOT\";\r\nexport const setPivot = createAction(SET_PIVOT);\r\n\r\nexport const currentQuick = handleActions(\r\n  {\r\n    SET_CURRENT_QUICK: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n  },\r\n  initialStateOne\r\n);\r\nexport const pivot = handleActions(\r\n  {\r\n    SET_PIVOT: (state, { payload }) => {\r\n      return payload;\r\n    },\r\n  },\r\n  initialStateTwo\r\n);\r\n","import { setArray } from \"../reducers/array\";\r\nimport { setCurrentQuick, setPivot } from \"../reducers/quickSort\";\r\nimport { setCurrentSwappers } from \"../reducers/swappers\";\r\nimport { setCurrentSorted } from \"../reducers/sorted\";\r\nimport { setRunning } from \"../reducers/running\";\r\n\r\nfunction quickSort(stateArray, dispatch, speed) {\r\n  let array = stateArray.slice(0);\r\n  let animations = [];\r\n  quickSortHelper(array, 0, array.length - 1, animations);\r\n  handleAnimations(animations, dispatch, array, speed);\r\n  return array;\r\n}\r\n\r\nfunction quickSortHelper(array, startIdx, endIdx, animations) {\r\n  if (startIdx >= endIdx) {\r\n    animations.push([true, startIdx]);\r\n    return;\r\n  }\r\n  let pivot = startIdx;\r\n  let left = startIdx + 1;\r\n  let right = endIdx;\r\n  animations.push(pivot);\r\n  animations.push([left, right]);\r\n\r\n  while (right >= left) {\r\n    if (array[right] < array[pivot] && array[left] > array[pivot]) {\r\n      let temp = array[right];\r\n      animations.push([left, right, true]);\r\n      array[right] = array[left];\r\n      array[left] = temp;\r\n      animations.push([array.slice(0)]);\r\n      animations.push([]);\r\n    }\r\n\r\n    if (array[right] >= array[pivot]) {\r\n      right--;\r\n    }\r\n\r\n    if (array[left] <= array[pivot]) {\r\n      left++;\r\n    }\r\n\r\n    if (right >= left) {\r\n      animations.push([left, right]);\r\n    }\r\n  }\r\n\r\n  animations.push([pivot, right]);\r\n\r\n  if (pivot !== right) {\r\n    let temp = array[right];\r\n    array[right] = array[pivot];\r\n    array[pivot] = temp;\r\n    animations.push([pivot, right, true]);\r\n    animations.push(array.slice(0));\r\n    animations.push([]);\r\n    animations.push([true, right]);\r\n  }\r\n\r\n  quickSortHelper(array, startIdx, right - 1, animations);\r\n  quickSortHelper(array, right + 1, endIdx, animations);\r\n}\r\n\r\nfunction handleAnimations(animations, dispatch, array, speed) {\r\n  if (!animations.length) {\r\n    dispatch(setPivot(null));\r\n    dispatch(setCurrentQuick(array.map((num, idx) => idx)));\r\n    setTimeout(() => {\r\n      dispatch(setCurrentQuick([]));\r\n      dispatch(setRunning(false));\r\n    }, 900);\r\n    return;\r\n  }\r\n\r\n  let dispatchFunction = !(animations[0] instanceof Array)\r\n    ? setPivot\r\n    : animations[0].length > 3\r\n    ? setArray\r\n    : animations[0].length !== 2\r\n    ? setCurrentSwappers\r\n    : animations[0].length === 2 && typeof animations[0][0] === \"boolean\"\r\n    ? setCurrentSorted\r\n    : setCurrentQuick;\r\n\r\n  dispatch(dispatchFunction(animations.shift()));\r\n\r\n  if (dispatchFunction === setPivot)\r\n    dispatch(setCurrentQuick(animations.shift()));\r\n\r\n  setTimeout(() => {\r\n    handleAnimations(animations, dispatch, array, speed);\r\n  }, speed);\r\n}\r\n\r\nexport default quickSort;\r\n","import { connect } from \"react-redux\";\r\nimport Toolbar from \"./Toolbar.jsx\";\r\nimport { setArray } from \"../../reducers/array\";\r\nimport { setAlgorithm } from \"../../reducers/algorithm\";\r\nimport { setCurrentSorted } from \"../../reducers/sorted\";\r\nimport { setRunning } from \"../../reducers/running\";\r\nimport bubbleSort from \"../../SortingAlgorithms/bubbleSort\";\r\nimport mergeSort from \"../../SortingAlgorithms/mergeSort\";\r\nimport heapSort from \"../../SortingAlgorithms/heapSort\";\r\nimport quickSort from \"../../SortingAlgorithms/quickSort\";\r\n\r\nconst mapStateToProps = ({ array, algorithm, isRunning }) => ({\r\n  array,\r\n  algorithm,\r\n  isRunning,\r\n});\r\n\r\nconst mapDispatchToProps = () => (dispatch) => ({\r\n  generateArray: (length) => {\r\n    let array = [];\r\n    while (array.length < length) {\r\n      array.push(Math.floor(Math.random() * 200) + 10);\r\n    }\r\n    dispatch(setArray(array));\r\n    dispatch(setCurrentSorted([]));\r\n  },\r\n\r\n  updateAlgorithm: (algorithm) => {\r\n    dispatch(setAlgorithm(algorithm));\r\n  },\r\n\r\n  sort: (algorithm, array, speed) => {\r\n    let doSort =\r\n      algorithm === \"bubbleSort\"\r\n        ? bubbleSort\r\n        : algorithm === \"mergeSort\"\r\n        ? mergeSort\r\n        : algorithm === \"heapSort\"\r\n        ? heapSort\r\n        : algorithm === \"quickSort\"\r\n        ? quickSort\r\n        : null;\r\n    dispatch(setCurrentSorted([]));\r\n    dispatch(setRunning(true));\r\n    doSort(array, dispatch, speed);\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);\r\n","import React, { Component } from \"react\";\r\nimport Body from \"../Body/BodyContainer\";\r\nimport Toolbar from \"../Toolbar/ToolbarContainer\";\r\nimport \"./SortingVisualizer.css\";\r\n\r\nclass SortingVisualizer extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Toolbar />\r\n        <Body />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingVisualizer;\r\n","import React from \"react\";\r\nimport SortingVisualizer from \"./components/SortingVisualizer/SortingVisualizer\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualizer></SortingVisualizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { algorithm } from \"./algorithm\";\r\nimport { array } from \"./array\";\r\nimport { currentBubble } from \"./bubbleSort\";\r\nimport { currentHeap } from \"./heapSort\";\r\nimport { currentMerge } from \"./mergeSort\";\r\nimport { currentQuick, pivot } from \"./quickSort\";\r\nimport { isRunning } from \"./running\";\r\nimport { currentSorted } from \"./sorted\";\r\nimport { currentSwappers } from \"./swappers\";\r\n\r\nexport default combineReducers({\r\n  algorithm,\r\n  array,\r\n  currentBubble,\r\n  currentHeap,\r\n  currentMerge,\r\n  currentQuick,\r\n  pivot,\r\n  isRunning,\r\n  currentSorted,\r\n  currentSwappers,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}